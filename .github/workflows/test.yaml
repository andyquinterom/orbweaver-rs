permissions:
  contents: read

on:
  push:
    branches:
      - 'main'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: Unit testing
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Restore cached target/
        id: target-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: ${{ matrix.toolchain }}-target
      # https://twitter.com/jonhoo/status/1571290371124260865
      - name: cargo test --locked
        run: cargo test --locked --all-features --all-targets
      # https://github.com/rust-lang/cargo/issues/6669
      - name: cargo test --doc
        run: cargo test --locked --all-features --doc
      - name: Save cached target/
        id: target-cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: ${{ steps.target-cache-restore.outputs.cache-primary-key }}
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
        if: runner.os == 'Windows'
      - run: vcpkg install openssl:x64-windows-static-md
        if: runner.os == 'Windows'
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo test
        run: cargo test --locked --all-features --all-targets
  coverage:
    runs-on: ubuntu-latest
    name: ubuntu / stable / coverage
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: cargo install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Restore cached target/
        id: target-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: coverage-target
      - name: cargo llvm-cov clean
        run: cargo llvm-cov clean --workspace
      - name: cargo llvm-cov
        run: cargo llvm-cov --locked --all-features --no-report --release
      - name: Save cached target/
        id: target-cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            target
            /home/runner/.cargo
          key: ${{ steps.target-cache-restore.outputs.cache-primary-key }}
      - name: cargo llvm-cov report
        run: cargo llvm-cov report --release --lcov --output-path lcov.info
